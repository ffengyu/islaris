//@isla-config: aarch64_isla_coq.toml
//@constraint: = (bvand SP_EL2  0xfff0000000000007) 0x0000000000000000
//@constraint: bvugt SP_EL2 0x0000000000000010
//@spec: stp_uninit_spec pc "R0" "R1" "SP_EL2" (-16) true
//@spec_tactic: all: bv_solve.
    7400:	a9bf07e0 	stp	x0, x1, [sp, #-16]!
    7404:	d53c5200 	mrs	x0, esr_el2
//@spec: lsr_R_spec pc "R0" 26
//@spec_tactic: by bv_simplify; bitblast.
    7408:	d35afc00 	lsr	x0, x0, #26
//@spec: cmp_R_imm_spec pc "R0" 0x16
//@spec_tactic: 1: cmp_spec_tac1. 1: cmp_spec_tac2. 1: cmp_spec_tac3. 1: cmp_spec_tac4.
    740c:	f100581f 	cmp	x0, #0x16
    7410:	54ff9f81 	b.ne	6800 <__host_exit>  // b.any
//@constraint: = (bvand SP_EL2 0xfff0000000000007) 0x0000000000000000
//@constraint: = (bvand (bvadd SP_EL2  0x0000000000000008) 0xfff0000000000007) 0x0000000000000000
//@spec: ldp_mapsto_spec pc "R0" "R1" "SP_EL2" 0 None
//@spec_tactic: all: bv_solve.
    7414:	a94007e0 	ldp	x0, x1, [sp]
//@spec: cmp_R_imm_spec pc "R0" 0x3
//@spec_tactic: 1: cmp_spec_tac1. 1: cmp_spec_tac2. 1: cmp_spec_tac3. 1: cmp_spec_tac4.
    7418:	f1000c1f 	cmp	x0, #0x3
    741c:	54ff9f22 	b.cs	6800 <__host_exit>  // b.hs, b.nlast
    7420:	910043ff 	add	sp, sp, #0x10
//@constraint: = (bvand 0x00000000000077f8 0xfff0000000000007) 0x0000000000000000
//@constraint: = (bvand (bvadd _PC 0x00000000000003d4) 0xfff0000000000007) 0x0000000000000000
//@spec: ldr_mapsto_spec pc 0x7424 "R5" 0x77f8
    7424:	58001ea5 	ldr	x5, 77f8 <__kvm_hyp_host_forward_smc+0x64>
//@parametric: 1 10 100101 00 imm:16 00110
    7428:	d2800006 	mov	x6, #0x0                   	// #0
//@parametric: 1 11 100101 01 imm:16 00110
    742c:	f2a00006 	movk	x6, #0x0, lsl #16
//@parametric: 1 11 100101 10 imm:16 00110
    7430:	f2c00006 	movk	x6, #0x0, lsl #32
//@parametric: 1 11 100101 11 imm:16 00110
    7434:	f2e00006 	movk	x6, #0x0, lsl #48
//@spec: sub_R_R_R_self_spec pc "R5" "R6"
//@spec_tactic: all:bv_solve.
    7438:	cb0600a5 	sub	x5, x5, x6
    743c:	d61f00a0 	br	x5

//@spec: cmp_R_imm_spec pc "R0" 0x1
//@spec_tactic: 1: cmp_spec_tac1. 1: cmp_spec_tac2. 1: cmp_spec_tac3. 1: cmp_spec_tac4.
   18218:	f100041f 	cmp	x0, #0x1
   1821c:	54000101 	b.ne	1823c <__kvm_handle_stub_hvc+0x24>  // b.any
   18220:	d51c4021 	msr	elr_el2, x1
   18224:	d2807920 	mov	x0, #0x3c9                 	// #969
   18228:	d51c4000 	msr	spsr_el2, x0
   1822c:	aa0203e0 	mov	x0, x2
   18230:	aa0303e1 	mov	x1, x3
   18234:	aa0403e2 	mov	x2, x4
   18238:	14000004 	b	18248 <reset>
//@spec: cmp_R_imm_spec pc "R0" 0x2
//@spec_tactic: 1: cmp_spec_tac1. 1: cmp_spec_tac2. 1: cmp_spec_tac3. 1: cmp_spec_tac4.
   1823c:	f100081f 	cmp	x0, #0x2
   18240:	54000241 	b.ne	18288 <reset+0x40>  // b.any
   18244:	aa1f03e0 	mov	x0, xzr

//reset
   18248:	d53c1005 	mrs	x5, sctlr_el2
   1824c:	d2a00406 	mov	x6, #0x200000              	// #2097152
   18250:	f28201e6 	movk	x6, #0x100f
   18254:	8a2600a5 	bic	x5, x5, x6
   18258:	d5033fdf 	isb
   1825c:	d51c1005 	msr	sctlr_el2, x5
//@isla-config: aarch64_isla_coq_pkvm.toml
   18260:	d5033fdf 	isb
   18264:	d503201f 	nop
   18268:	d503201f 	nop
   1826c:	d503201f 	nop
   18270:	d503201f 	nop
   18274:	d503201f 	nop
   18278:	90000025 	adrp	x5, 1c000 <hyp_memory+0x450>
   1827c:	911e60a5 	add	x5, x5, #0x798
   18280:	d51cc005 	msr	vbar_el2, x5
//@constraint: = ((_ extract 4  4 ) SPSR_EL2) 0b0
//@constraint: =  (bvxor ((_ extract 2 2) SPSR_EL2) ((_ extract 3 3) SPSR_EL2)) 0b1
//@constraint: = ((_ extract 1  1 ) SPSR_EL2) 0b0
//@constraint: = ((_ extract 20 20) SPSR_EL2) 0b0
//@constraint: = ((_ extract 55 55) ELR_EL2) 0b0
   18284:	d69f03e0 	eret
//@isla-config: aarch64_isla_coq.toml
   18288:	d2a175a0 	mov	x0, #0xbad0000             	// #195887104
   1828c:	f2994220 	movk	x0, #0xca11
//@constraint: = ((_ extract 4  4 ) SPSR_EL2) 0b0
//@constraint: =  (bvxor ((_ extract 2 2) SPSR_EL2) ((_ extract 3 3) SPSR_EL2)) 0b1
//@constraint: = ((_ extract 1  1 ) SPSR_EL2) 0b0
//@constraint: = ((_ extract 20 20) SPSR_EL2) 0b0
//@constraint: = ((_ extract 55 55) ELR_EL2) 0b0
   18290:	d69f03e0 	eret