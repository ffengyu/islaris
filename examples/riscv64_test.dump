//@base_address: 0x0000000010300000
   0:	00000513          	li	a0,0
   4:	00150513          	addi	a0,a0,1
//@constraint: = ((_ extract 2 2) misa.bits) 0b1
//@constraint: = (bvand mstatus.bits 0x0000000000020000) 0x0000000000000000
//@constraint: = cur_privilege Machine
//@constraint: = ((_ extract 2 0) x2) 0b000
//@constraint: bvuge (bvadd x2 0x0000000000000008) rv_ram_base
//@constraint: bvult (bvadd x2 0x0000000000000008) (bvadd rv_ram_base rv_ram_size)
//@spec: sd_spec pc "x11" "x2" (8)
//@spec_tactic: all: bv_solve.
   8:	00b13423          	sd	a1,8(sp)
//@constraint: = ((_ extract 2 2) misa.bits) 0b1
//@constraint: = (bvand mstatus.bits 0x0000000000020000) 0x0000000000000000
//@constraint: = cur_privilege Machine
//@constraint: = ((_ extract 2 0) x2) 0b000
//@constraint: bvuge (bvadd x2 0x0000000000000008) rv_ram_base
//@constraint: bvult (bvadd x2 0x0000000000000008) (bvadd rv_ram_base rv_ram_size)
//@spec: ld_spec pc "x11" "x2" (8)
//@spec_tactic: all: bv_solve.
   c:	00813583          	ld	a1,8(sp)
//TODO: make the following unnecessary
//this should encode MXL 2 and extensions A,C,D,F,I,M,N,Q,S,U
//constraint: = misa.bits 0b1000000000000000000000000000000000000000000101010011000100101101
//@constraint: = ((_ extract 1 1) PC) 0b0
  10:	00b50463          	beq	a0,a1,18 <.END>
